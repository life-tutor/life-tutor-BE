plugins {
    id 'org.springframework.boot' version '2.6.10'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // ehcache
    implementation 'org.hibernate:hibernate-ehcache'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'commons-codec:commons-codec:1.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation 'com.auth0:java-jwt:3.13.0'

    // oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // sentry
    implementation 'io.sentry:sentry-spring-boot-starter:6.4.1'

}

tasks.named('test') {
    useJUnitPlatform()
}

// plain jar를 생성하지 않는다.
jar {
    enabled = false
}

// jacoco
jacoco {
    toolVersion = '0.8.8'
}

jacocoTestReport {
    reports {
        html.enabled true
        csv.enabled true
        xml.enabled false
    }
    dependsOn test
}

test {
    finalizedBy jacocoTestReport // gradle test 이후에 jacocoTestReport를 실행
}


jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true;
            element = 'CLASS'

            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.5
            }
        }

    }
}

