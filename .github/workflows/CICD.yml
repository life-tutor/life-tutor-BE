name: Spring Boot CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Add Application Property
        run: |
          echo "spring.security.oauth2.client.registration.kakao.client-id=$KAKAO_CLIENT_ID" >> application.properties \
          echo "spring.security.oauth2.client.registration.kakao.client-secret=$KAKAO_CLIENT_SECRET" >> application.properties \
          echo "spring.security.oauth2.client.registration.kakao.redirect-uri=$KAKAO_REDIRECT_URI" >> application.properties
        env:
          KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
          KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
          KAKAO_REDIRECT_URI: ${{ secrets.KAKAO_REDIRECT_URI }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build

      - name: Make Directory for deliver
        run: mkdir deploy

      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy/

      - name: Copy appspec
        run: cp appspec.yml ./deploy/

      - name: Copy script
        run: cp ./scripts/*.sh ./deploy

      - name: Make zip file
        run: zip -r -qq -j ./springboot-deploy.zip ./deploy

      - name: Deliver to AWS S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
          --region ap-northeast-2 \
          --acl private \
          ./springboot-deploy.zip s3://iting-deploy/springboot-deploy.zip

      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws deploy create-deployment \
          --application-name springboot-deploy \
          --deployment-group-name springboot-deploy-group \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=iting-deploy,bundleType=zip,key=springboot-deploy.zip \
          --region ap-northeast-2